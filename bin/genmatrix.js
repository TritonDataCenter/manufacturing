/*
 * Copyright 2014 Joyent, Inc.  All rights reserved.
 * Copyrgith 2022 MNX Cloud, Inc.
 */

var path = require('path');
var partsdb = require('../lib/partsdb');
var extsprintf = require('extsprintf');
var disklayout = require('/usr/node/node_modules/disklayout');

var fmt = extsprintf.sprintf;

var db;
var conf = {
	defmfg: 'joyent',
	dbdir: process.argv[2]
};

var w = function () {
	return (process.stdout.write(fmt.apply(fmt, arguments), 'utf-8'));
};

db = partsdb.create(conf);

w('<!-- DO NOT EDIT THIS FILE! It is automatically generated by %s -->\n\n',
    path.basename(process.argv[1]));

w('# SKU Matrix\n\n');
w('|| **SKU** || **Alias** || **CPU** || **Memory** || **NICs** || **Storage** ||\n');
db.sortParts().forEach(function (p) {
	var rl;

	if (p.dependents().length !== 0 || p.is_eol())
		return;

	rl = p.resources(db);
	if (rl.length > 0) {
		var disks = [];
		var dc = 0;
		var layout;
		var cpu = '';
		var mem = 0;
		var stor = '';
		var nic = '';

		rl.forEach(function (r) {
			switch (r.class) {
			case 'cpu':
				cpu += fmt('%d x %d MHz %s ', r.qty, r.size, r.type);
				break;
			case 'memory':
				mem += r.qty * r.size;
				break;
			case 'nic':
				nic += fmt('%d x %d Gb %s ', r.qty, r.size, r.type);
				break;
			case 'storage':
				for (var i = 0; i < r.qty; i++) {
					var d = {
						type: 'SCSI',
						name: 'disk' + (dc++),
						vid: 'VENDOR',
						pid: 'PRODUCT',
						size: r.size * 1000000000,
						removable: false,
						solid_state: (r.type === 'ssd')
					};
					disks.push(d);
				}
				stor += fmt('%d x %d GB %s ', r.qty, r.size, r.type);
				break;
			}
		});

		if (disks.length > 0)
			layout = disklayout.compute(disks, null, 0, false, 0);

		w('|| %s || %s || %s || %d GiB || %s || %s (%d GB usable) ||\n',
		    p.pn(), p.alias(), cpu, mem, nic, stor,
		    (layout.capacity || 0) / 1000000000);
	}
});
w('\n');
